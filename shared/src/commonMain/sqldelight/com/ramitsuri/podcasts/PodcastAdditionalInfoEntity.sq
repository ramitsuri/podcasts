import com.ramitsuri.podcasts.model.EpisodeSortOrder;
import kotlin.Boolean;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS PodcastAdditionalInfoEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    subscribed INTEGER AS Boolean NOT NULL,
    autoDownloadEpisodes INTEGER AS Boolean NOT NULL,
    newEpisodeNotification INTEGER AS Boolean NOT NULL,
    subscribedDate INTEGER AS Instant,
    hasNewEpisodes INTEGER AS Boolean NOT NULL DEFAULT 0,
    autoAddToQueue INTEGER AS Boolean NOT NULL DEFAULT 0,
    showCompletedEpisodes INTEGER AS Boolean NOT NULL DEFAULT 1,
    episodeSortOrder INTEGER AS EpisodeSortOrder NOT NULL DEFAULT 0
);

insertOrIgnore:
INSERT OR IGNORE INTO
PodcastAdditionalInfoEntity(id, subscribed, autoDownloadEpisodes, newEpisodeNotification, subscribedDate, hasNewEpisodes, autoAddToQueue, showCompletedEpisodes, episodeSortOrder)
VALUES ?;

updateSubscribed:
UPDATE PodcastAdditionalInfoEntity
SET subscribed = :subscribed
WHERE id = :id;

updateAutoDownloadEpisodes:
UPDATE PodcastAdditionalInfoEntity
SET autoDownloadEpisodes = :autoDownloadEpisodes
WHERE id = :id;

updateNewEpisodeNotification:
UPDATE PodcastAdditionalInfoEntity
SET newEpisodeNotification = :newEpisodeNotification
WHERE id = :id;

updateHasNewEpisodes:
UPDATE PodcastAdditionalInfoEntity
SET hasNewEpisodes = :hasNewEpisodes
WHERE id = :id;

updateAutoAddToQueue:
UPDATE PodcastAdditionalInfoEntity
SET autoAddToQueue = :autoAddToQueue
WHERE id = :id;

updateSubscribedDate:
UPDATE PodcastAdditionalInfoEntity
SET subscribedDate = :subscribedDate
WHERE id = :id;

updateShowCompletedEpisodes:
UPDATE PodcastAdditionalInfoEntity
SET showCompletedEpisodes = :showCompletedEpisodes
WHERE id = :id;

updateEpisodeSortOrder:
UPDATE PodcastAdditionalInfoEntity
SET episodeSortOrder = :episodeSortOrder
WHERE id = :id;

remove:
DELETE FROM PodcastAdditionalInfoEntity
WHERE id IN :podcastIds;
